{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useCallback } from 'react';\n\n// Función de throttling para limitar la frecuencia de ejecución\nconst throttle = (func, limit) => {\n  let inThrottle;\n  return function (...args) {\n    if (!inThrottle) {\n      func.apply(this, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\n\n// Función de debouncing para agrupar llamadas\nconst debounce = (func, delay) => {\n  let timeoutId;\n  return function (...args) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => func.apply(this, args), delay);\n  };\n};\nexport const useCarousel3D = (baseSlides, copies = 3) => {\n  _s();\n  const carouselRef = useRef(null);\n  const isPausedRef = useRef(false);\n  const lastFrameTimeRef = useRef(0);\n\n  // Función para pausar animación\n  const pauseAnimation = useCallback(() => {\n    isPausedRef.current = true;\n  }, []);\n\n  // Función para reanudar animación\n  const resumeAnimation = useCallback(() => {\n    isPausedRef.current = false;\n  }, []);\n\n  // Función optimizada para aplicar transformación (con throttling)\n  const applyTransformOptimized = useCallback(offsetPx => {\n    if (carouselRef.current) {\n      // Usar transform3d para GPU acceleration\n      carouselRef.current.style.transform = `translate3d(${Math.round(offsetPx)}px, 0, 0)`;\n\n      // Forzar composición en GPU\n      carouselRef.current.style.willChange = 'transform';\n    }\n  }, []);\n\n  // Función throttled para aplicar transformación\n  const throttledTransform = useCallback(throttle(applyTransformOptimized, 16),\n  // 60fps máximo\n  [applyTransformOptimized]);\n\n  // Event listeners optimizados\n  useEffect(() => {\n    var _carouselRef$current;\n    const section = (_carouselRef$current = carouselRef.current) === null || _carouselRef$current === void 0 ? void 0 : _carouselRef$current.closest('section');\n    if (!section) return;\n\n    // Usar passive listeners donde sea posible\n    section.addEventListener('mouseenter', pauseAnimation, {\n      passive: true\n    });\n    section.addEventListener('mouseleave', resumeAnimation, {\n      passive: true\n    });\n    return () => {\n      section.removeEventListener('mouseenter', pauseAnimation);\n      section.removeEventListener('mouseleave', resumeAnimation);\n    };\n  }, [pauseAnimation, resumeAnimation]);\n  return {\n    carouselRef,\n    isPaused: isPausedRef.current,\n    throttledTransform,\n    lastFrameTime: lastFrameTimeRef.current\n  };\n};\n_s(useCarousel3D, \"OQe0dBjuQqn2cpR9vpfuaBaH/b4=\");","map":{"version":3,"names":["useEffect","useRef","useCallback","throttle","func","limit","inThrottle","args","apply","setTimeout","debounce","delay","timeoutId","clearTimeout","useCarousel3D","baseSlides","copies","_s","carouselRef","isPausedRef","lastFrameTimeRef","pauseAnimation","current","resumeAnimation","applyTransformOptimized","offsetPx","style","transform","Math","round","willChange","throttledTransform","_carouselRef$current","section","closest","addEventListener","passive","removeEventListener","isPaused","lastFrameTime"],"sources":["/Users/jungle/Documents/Developer Tests/Artivism-Web-React/src/hooks/useCarousel3D.js"],"sourcesContent":["import { useEffect, useRef, useCallback } from 'react';\n\n// Función de throttling para limitar la frecuencia de ejecución\nconst throttle = (func, limit) => {\n  let inThrottle;\n  return function(...args) {\n    if (!inThrottle) {\n      func.apply(this, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\n\n// Función de debouncing para agrupar llamadas\nconst debounce = (func, delay) => {\n  let timeoutId;\n  return function(...args) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => func.apply(this, args), delay);\n  };\n};\n\nexport const useCarousel3D = (baseSlides, copies = 3) => {\n  const carouselRef = useRef(null);\n  const isPausedRef = useRef(false);\n  const lastFrameTimeRef = useRef(0);\n\n  // Función para pausar animación\n  const pauseAnimation = useCallback(() => {\n    isPausedRef.current = true;\n  }, []);\n\n  // Función para reanudar animación\n  const resumeAnimation = useCallback(() => {\n    isPausedRef.current = false;\n  }, []);\n\n  // Función optimizada para aplicar transformación (con throttling)\n  const applyTransformOptimized = useCallback((offsetPx) => {\n    if (carouselRef.current) {\n      // Usar transform3d para GPU acceleration\n      carouselRef.current.style.transform = `translate3d(${Math.round(offsetPx)}px, 0, 0)`;\n      \n      // Forzar composición en GPU\n      carouselRef.current.style.willChange = 'transform';\n    }\n  }, []);\n\n  // Función throttled para aplicar transformación\n  const throttledTransform = useCallback(\n    throttle(applyTransformOptimized, 16), // 60fps máximo\n    [applyTransformOptimized]\n  );\n\n  // Event listeners optimizados\n  useEffect(() => {\n    const section = carouselRef.current?.closest('section');\n    if (!section) return;\n\n    // Usar passive listeners donde sea posible\n    section.addEventListener('mouseenter', pauseAnimation, { passive: true });\n    section.addEventListener('mouseleave', resumeAnimation, { passive: true });\n\n    return () => {\n      section.removeEventListener('mouseenter', pauseAnimation);\n      section.removeEventListener('mouseleave', resumeAnimation);\n    };\n  }, [pauseAnimation, resumeAnimation]);\n\n  return {\n    carouselRef,\n    isPaused: isPausedRef.current,\n    throttledTransform,\n    lastFrameTime: lastFrameTimeRef.current\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}